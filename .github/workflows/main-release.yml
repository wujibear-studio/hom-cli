name: Main Release

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  prepare-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup Yarn
        run: |
          mkdir -p .yarn/releases
          npm install -g corepack
          corepack enable
          corepack prepare yarn@3.7.0 --activate
          cp ~/.cache/node/corepack/v1/yarn/3.7.0/yarn.js .yarn/releases/yarn-3.7.0.cjs
      
      - name: Install dependencies
        run: yarn install
      
      - name: Build
        run: yarn build
      
      - name: Generate oclif manifest
        run: yarn oclif manifest
      
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

  build-tarballs:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Setup Yarn
        run: |
          mkdir -p .yarn/releases
          npm install -g corepack
          corepack enable
          corepack prepare yarn@3.7.0 --activate
          cp ~/.cache/node/corepack/v1/yarn/3.7.0/yarn.js .yarn/releases/yarn-3.7.0.cjs
      
      - name: Install dependencies
        run: |
          # Production install with --no-immutable to handle peer deps
          NODE_ENV=production yarn install --no-immutable
      
      - name: Pack for platforms
        run: |
          mkdir -p dist/tarballs
          
          echo "Running oclif pack..."
          # Bypass workspace commands
          export OCLIF_SKIP_WORKSPACE_FOCUS=true
          export OCLIF_SKIP_YARN_WORKSPACE=true
          
          # Try oclif-dev pack command with error capture
          echo "Attempting to pack with oclif-dev..."
          if ! yarn oclif-dev pack 2>pack-error.log; then
            echo "Error during packing:"
            cat pack-error.log
            exit 1
          fi
          
          echo "Moving packages to tarballs directory..."
          mkdir -p dist/tarballs
          
          # Look for tarballs in multiple possible locations
          echo "Searching for tarballs..."
          for dir in "./dist" "./tmp" "."; do
            echo "Checking in $dir..."
            if [ -d "$dir" ]; then
              find "$dir" -name "*.tar.gz" -type f -print
              find "$dir" -name "*.tar.gz" -type f -exec mv -v {} dist/tarballs/ \; || true
            fi
          done
          
          echo "Checking tarballs directory..."
          ls -la dist/tarballs || true
          
          # Verify we have tarballs
          if [ -z "$(ls -A dist/tarballs 2>/dev/null)" ]; then
            echo "Error: No packages were created in dist/tarballs"
            echo "Directory structure:"
            find . -type d -print
            echo "All tar.gz files in workspace:"
            find . -name "*.tar.gz" -type f -print
            exit 1
          fi
          
          echo "Renaming tarballs..."
          cd dist/tarballs
          for f in *.tar.gz; do
            if [ -f "$f" ]; then
              echo "Processing $f..."
              version=$(echo "$f" | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' | sed 's/v//')
              if [ -n "$version" ]; then
                new_name="hom-cli-${version}-linux-x64.tar.gz"
                echo "Renaming $f to $new_name"
                mv "$f" "$new_name"
              else
                echo "Warning: Could not extract version from filename $f"
              fi
            fi
          done

      - name: Upload tarballs artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: release-tarballs
          path: dist/tarballs/
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload_url }}
          asset_path: ./dist/tarballs/hom-cli-${{ needs.prepare-release.outputs.version }}-linux-x64.tar.gz
          asset_name: hom-cli-${{ needs.prepare-release.outputs.version }}.tar.gz
          asset_content_type: application/gzip

  publish-npm:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup Yarn
        run: |
          mkdir -p .yarn/releases
          npm install -g corepack
          corepack enable
          corepack prepare yarn@3.7.0 --activate
          cp ~/.cache/node/corepack/v1/yarn/3.7.0/yarn.js .yarn/releases/yarn-3.7.0.cjs
      
      - name: Install dependencies
        run: yarn install
      
      - name: Build
        run: yarn build
      
      - name: Generate oclif manifest
        run: yarn oclif manifest
      
      - name: Publish to npm
        run: yarn npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  update-homebrew:
    needs: [prepare-release, build-tarballs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Update Homebrew formula
        run: |
          ./scripts/update-homebrew.sh
        env:
          HOMEBREW_GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }} 